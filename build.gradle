plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id 'java-library'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
}

import net.fabricmc.loom.task.RemapJarTask

def targetJavaVersion = 17

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	mavenCentral()

	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net/'
	}

	maven {
		name "Terraformersmc"
		url = "https://maven.terraformersmc.com/"
	}

	maven {
		name "Jitpack"
		url = "https://jitpack.io"
	}

	maven {
		name = "AperLambda"
		url = 'https://aperlambda.github.io/maven'
	}

	maven {
		name = 'Gegy'
		url = 'https://maven.gegy.dev/'
	}

}

configurations {
	shadow
	api.extendsFrom shadow
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.

	// ModMenu dependency
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	// SpruceUI dependency
	modImplementation "dev.lambdaurora:spruceui:${project.spruceui_version}"
	include "dev.lambdaurora:spruceui:${project.spruceui_version}"

	// Toml Night-Config
	shadow 'com.electronwill.night-config:core:3.6.6'
	shadow 'com.electronwill.night-config:toml:3.6.6'
}

if (project.use_third_party_mods) {
	repositories {
		maven {
			name = "Gegy"
			url = "https://maven.gegy.dev"
		}
	}

	dependencies {
		// Currently broken on 1.18.1, temporarily disabling
		// DataBreaker to reduce the time spent loading
		// Don't use outside of dev environment
//		modRuntime("supercoder79:databreaker:${project.databreaker_version}") {
//			transitive = false
//		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

shadowJar {
	dependsOn(project(":").jar)
	configurations = [project.configurations.shadow]
	archiveClassifier.set('dev')

	relocate 'com.electronwill.nightconfig', 'com.github.quaoz.shadow.nightconfig'
}

remapJar {
	inputFile = shadowJar.archiveFile
}

//task shadowRemapJar(type: RemapJarTask) {
//	dependsOn shadowJar
//
//	input.set(file("${project.buildDir}/libs/$archivesBaseName-${project.version}-dev.jar"))
//	archiveFileName = "${archivesBaseName}-${project.version}.jar"
//	addNestedDependencies.set(true)
//}
//build.dependsOn(tasks.shadowRemapJar)

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
